#!/usr/bin/env node
const debug = require('debug')('node-sequelize:server');
const http = require('http');

const app = require('../app');

const server = http.createServer(app);

function normalizePort(val) {
  const port = parseInt(val, 10);
  if (Number.isNaN(port)) {
    return val;
  }
  if (port >= 0) {
    return port;
  }
  return false;
}

function onListening() {
  const addr = server.address();
  const bind = typeof addr === 'string'
    ? `pipe ${addr}`
    : `port ${addr.port}`;
  debug(`Listening on ${bind}`);
}

const port = normalizePort(process.env.PORT || '3001');

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  switch (error.code) {
    case 'EACCES':
      process.exit(1);
      break;
    case 'EADDRINUSE':
      process.exit(1);
      break;
    default:
      throw error;
  }
}
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);
app.set('port', port);
